cabal-version: 1.12

-- This file has been generated from package.yaml by hpack version 0.35.2.
--
-- see: https://github.com/sol/hpack

name:           binrep
version:        0.5.0
synopsis:       Encode precise binary representations directly in types
description:    Please see README.md.
category:       Data, Serialization
homepage:       https://github.com/raehik/binrep#readme
bug-reports:    https://github.com/raehik/binrep/issues
author:         Ben Orchard
maintainer:     Ben Orchard <thefirstmuffinman@gmail.com>
license:        MIT
license-file:   LICENSE
build-type:     Simple
tested-with:
    GHC ==9.4.4
extra-source-files:
    README.md
    CHANGELOG.md

source-repository head
  type: git
  location: https://github.com/raehik/binrep

flag icu
  description: use text-icu package (requires ICU library)
  manual: True
  default: True

library
  exposed-modules:
      Binrep
      Binrep.BLen.Simple
      Binrep.BLen.Simple.Generic
      Binrep.CBLen
      Binrep.CBLen.Generic
      Binrep.Extra.HexByteString
      Binrep.Generic
      Binrep.Get.Flatparse
      Binrep.Put.Bytezap
      Binrep.Put.Mason
      Binrep.Type.Byte
      Binrep.Type.Common
      Binrep.Type.Int
      Binrep.Type.Magic
      Binrep.Type.NullPadded
      Binrep.Type.NullTerminated
      Binrep.Type.Prefix
      Binrep.Type.Prefix.Count
      Binrep.Type.Prefix.Size
      Binrep.Type.Sized
      Binrep.Type.Text
      Binrep.Type.Text.Encoding.Ascii
      Binrep.Type.Text.Encoding.ShiftJis
      Binrep.Type.Text.Encoding.Utf16
      Binrep.Type.Text.Encoding.Utf32
      Binrep.Type.Text.Encoding.Utf8
      Binrep.Type.Text.Internal
      Binrep.Type.Thin
      Binrep.Util
      Binrep.Util.Class
      Binrep.Util.Generic
      Binrep.Via
      Bytezap
      Bytezap.Bytes
      Bytezap.Class
      Bytezap.Class.Generic
      Bytezap.Class.TH
      Bytezap.Example
      Bytezap.Int
      Bytezap.Poke.Bytes
      Bytezap.Poke.Int
      Bytezap.Text
      Data.Aeson.Extra.SizedVector
      Senserial.Internal.Error
      Senserial.Sequential
      Senserial.Sequential.Parse
      Senserial.Sequential.Parse.Constructor
      Senserial.Sequential.Parse.NonSum
      Senserial.Sequential.Parse.Parser
      Senserial.Sequential.Parse.Sum
      Senserial.Sequential.Serialize
      Senserial.Sequential.Serialize.Builder
      Senserial.Sequential.Serialize.Constructor
      Senserial.Sequential.Serialize.NonSum
      Senserial.Sequential.Serialize.Sum
      Senserial.Util
      Util.Generic
      Util.TypeNats
  other-modules:
      Paths_binrep
  hs-source-dirs:
      src
  default-extensions:
      LambdaCase
      NoStarIsType
      DerivingVia
      DeriveAnyClass
      GADTs
      RoleAnnotations
      DefaultSignatures
      TypeFamilies
      DataKinds
      MagicHash
  ghc-options: -Wall
  build-depends:
      aeson >=2.0 && <2.2
    , base >=4.14 && <5
    , bytestring ==0.11.*
    , deepseq >=1.4.8.0 && <1.5
    , flatparse >=0.4.0.1 && <0.5
    , mason
    , megaparsec >=9.2.0 && <9.3
    , parser-combinators >=1.3.0 && <1.4
    , refined1 ==0.9.*
    , strongweak >=0.6.0 && <0.7
    , text >=2 && <2.1
    , vector >=0.12.3.1 && <0.13
    , vector-sized >=1.5.0 && <1.6
  default-language: GHC2021
  if flag(icu)
    cpp-options: -DHAVE_ICU
    build-depends:
        text-icu >=0.7.0.0 && <0.9

test-suite spec
  type: exitcode-stdio-1.0
  main-is: Spec.hs
  other-modules:
      ArbitraryOrphans
      Binrep.Extra.HexByteStringSpec
      Binrep.LawsSpec
      Paths_binrep
  hs-source-dirs:
      test
  default-extensions:
      LambdaCase
      NoStarIsType
      DerivingVia
      DeriveAnyClass
      GADTs
      RoleAnnotations
      DefaultSignatures
      TypeFamilies
      DataKinds
      MagicHash
  ghc-options: -Wall
  build-tool-depends:
      hspec-discover:hspec-discover >=2.7 && <2.10
  build-depends:
      QuickCheck >=2.14.2 && <2.15
    , aeson >=2.0 && <2.2
    , base >=4.14 && <5
    , binrep
    , bytestring ==0.11.*
    , deepseq >=1.4.8.0 && <1.5
    , flatparse >=0.4.0.1 && <0.5
    , generic-random >=1.5.0.1 && <1.6
    , hspec >=2.7 && <2.10
    , mason
    , megaparsec >=9.2.0 && <9.3
    , parser-combinators >=1.3.0 && <1.4
    , quickcheck-instances >=0.3.26 && <0.4
    , refined1 ==0.9.*
    , strongweak >=0.6.0 && <0.7
    , text >=2 && <2.1
    , vector >=0.12.3.1 && <0.13
    , vector-sized >=1.5.0 && <1.6
  default-language: GHC2021
  if flag(icu)
    cpp-options: -DHAVE_ICU
    build-depends:
        text-icu >=0.7.0.0 && <0.9

benchmark bench
  type: exitcode-stdio-1.0
  main-is: Main.hs
  other-modules:
      Paths_binrep
  hs-source-dirs:
      bench
  default-extensions:
      LambdaCase
      NoStarIsType
      DerivingVia
      DeriveAnyClass
      GADTs
      RoleAnnotations
      DefaultSignatures
      TypeFamilies
      DataKinds
      MagicHash
  ghc-options: -Wall -O2
  build-depends:
      aeson >=2.0 && <2.2
    , base >=4.14 && <5
    , binrep
    , bytestring ==0.11.*
    , deepseq >=1.4.8.0 && <1.5
    , flatparse >=0.4.0.1 && <0.5
    , gauge
    , mason
    , megaparsec >=9.2.0 && <9.3
    , parser-combinators >=1.3.0 && <1.4
    , refined1 ==0.9.*
    , strongweak >=0.6.0 && <0.7
    , text >=2 && <2.1
    , vector >=0.12.3.1 && <0.13
    , vector-sized >=1.5.0 && <1.6
  default-language: GHC2021
  if flag(icu)
    cpp-options: -DHAVE_ICU
    build-depends:
        text-icu >=0.7.0.0 && <0.9
